{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/currentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","React","memo","className","href","title","src","logoPath","alt","currentYear","Date","getFullYear","Footer","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","_id","card","owner","isLiked","likes","some","like","link","name","onClick","onCardClick","onCardLike","length","onCardDelete","Main","this","onEditAvatar","context","avatar","about","onEditProfile","onAddPlace","aria-label","cards","map","item","key","PureComponent","contextType","PopupWithForm","isOpen","onClose","onSubmit","noValidate","children","type","buttonText","ImagePopup","EditProfilePopup","useState","formValues","changeFormValues","handleFormChange","event","target","value","useEffect","preventDefault","onUpdateUser","onChange","defaultValue","id","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","placeholder","AddPlacePopup","console","log","api","token","cohort","_token","_cohort","serverResponse","ok","json","Promise","reject","status","fetch","method","headers","authorization","then","_processResponse","userObject","body","JSON","stringify","cardObject","cardId","needLike","requestMethod","avatarData","App","handleEditAvatarClick","setState","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOpen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","confirmDeletePopupOpen","handleUpdateUser","newUserData","saveUserInfo","responceData","catch","error","handleUpdateAvatar","newAvatarData","changeAvatar","handleCardLike","changeCardLike","updatedCard","newCardsState","state","handleCardDelete","cardToDelete","cardDelete","deleteCard","responce","reducedCards","filter","handleAddPlaceSubmit","newCardObject","addCard","getUserInfo","data","getCardsList","Provider","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","querySelector","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b42ebd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.13057e3e.svg\";","import React from 'react';\nimport logoPath from \"../images/logo.svg\";\n\nconst Header = React.memo(() => {\n  return (\n    <header className=\"header\">\n      <a href=\"/\" title=\"Место\" className=\"logo\">\n        <img src={logoPath} alt=\"Место\" className=\"logo__image\"/>\n      </a>\n    </header>\n  )\n})\n\nexport default Header;\n","import React from 'react';\n\nconst currentYear = new Date().getFullYear();\n\nconst Footer = React.memo(() => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">\n        &copy; {currentYear === 2020 ? '2020' : '2020 - ' + currentYear} Mesto Russia\n      </p>\n    </footer>\n  )\n});\n\nexport default Footer;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport {CurrentUserContext} from '../contexts/currentUserContext';\n\nconst Card = React.memo((props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = currentUser._id === props.card.owner._id;\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id); //Проверяем, установлен ли лайк\n  const cardLikeButtonClassName = 'place__like_status_active'; //Класс установленного лайка\n\n  function handleClick () {\n    props.onCardClick(props.card);\n  }\n\n  function handleLike () {\n    props.onCardLike(props.card);\n  }\n\n  function handleDelete () {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <li className=\"place\">\n      <img src={props.card.link} alt={props.card.name} onClick={handleClick} className=\"place__image\"/>\n      <h2 className=\"place__title\">{props.card.name}</h2>\n\n      <div className=\"place__like-container\">\n        <button className={!isLiked? \"place__like\" : `place__like ${cardLikeButtonClassName}`} title=\"Поставить месту лайк\" onClick={handleLike}>Поставить месту лайк</button>\n        <p className=\"place__likes-count\" title={`Лайков - ${props.card.likes.length}`}>{props.card.likes.length}</p>\n      </div>\n\n      {isOwn && <button className=\"place__delete\" title=\"Удалить место\" onClick={handleDelete}>Удалить место</button> }\n    </li>\n  )\n})\n\nexport default Card\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/currentUserContext'; //Контекст текущего юзера\n\nclass Main extends React.PureComponent {\n  static contextType = CurrentUserContext;\n\n  constructor(props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <main className=\"main\">\n        {/* Профиль пользователя */}\n        <section className=\"profile\">\n          <div className=\"profile__avatar-container\" onClick={this.props.onEditAvatar}>\n            <img src={this.context.avatar} alt=\"Жак-Ив Кусто\" className=\"profile__avatar\" />\n          </div>\n\n          <div className=\"profile__info\">\n            <h1 className=\"profile__title\">{this.context.name}</h1>\n            <p className=\"profile__description\">{this.context.about}</p>\n            <button className=\"profile__edit-button\" title=\"Редактировать профиль\" onClick={this.props.onEditProfile}>Редактировать профиль</button>\n          </div>\n\n          <button className=\"profile__add-button\" title=\"Добавить место\" onClick={this.props.onAddPlace}>Добавить место</button>\n        </section>\n        {/* Профиль пользователя */}\n\n        {/* Список мест  */}\n        <section className=\"places\" aria-label=\"Места\">\n          {/*  Контейнер для рендера списка мест  */}\n          <ul className=\"places__list\">\n            {this.props.cards.map((item, key) => (\n              <Card card={item} key={key} onCardClick={this.props.onCardClick} onCardLike={this.props.onCardLike} onCardDelete={this.props.onCardDelete}/>\n            ))}\n          </ul>\n          {/* // Контейнер для рендера списка мест   */}\n        </section>\n        {/* Список мест  */}\n      </main>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst PopupWithForm = React.memo((props) => {\n    return (\n      <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n        <div className=\"popup__container\">\n          <button className=\"popup__close\" onClick={props.onClose}>Закрыть форму</button>\n          <form className=\"form\" name={props.name} onSubmit={props.onSubmit} noValidate>\n            <h2 className=\"form__title\">{props.title}</h2>\n            {props.children}\n            <button type=\"submit\" className=\"form__submit\">{props.buttonText}</button>\n          </form>\n        </div>\n      </div>\n    )\n});\n\nexport default PopupWithForm;\n","import React from 'react';\n\nconst ImagePopup = React.memo ((props) => {\n  return (\n      <div className={`popup popup_type_image ${props.card && 'popup_opened'}`}>\n        <figure className=\"popup__image-container\">\n          <button className=\"popup__close\" onClick={props.onClose}>Закрыть форму</button>\n          {/*Поскольку мы не имеем изображения при инициализации, не рендерим эту картинку, если карточка не выбрана*/}\n          {props.card && <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>}\n          <figcaption className=\"popup__image-description\">\n            {props.card.name}\n          </figcaption>\n        </figure>\n      </div>\n  )\n});\n\nexport default ImagePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/currentUserContext';\n\nfunction EditProfilePopup (props) {\n  const [formValues, changeFormValues] = React.useState({name: '', about: ''});\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleFormChange (event) {\n    changeFormValues({...formValues, [event.target.name]: event.target.value});\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onUpdateUser(formValues);\n  }\n\n  React.useEffect(() => {\n    changeFormValues({name: currentUser.name, about: currentUser.about})\n  }, [currentUser])\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" buttonText=\"Сохранить\" name=\"profile\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} defaultValue={formValues.name} type=\"text\" name=\"name\" className=\"form__input\" id=\"profile-name\" minLength=\"2\" maxLength=\"40\" aria-label=\"Имя\" required/>\n          <span className=\"form__error\" id=\"profile-name-error\"></span>\n        </div>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} defaultValue={formValues.about} type=\"text\" name=\"about\" className=\"form__input\" id=\"profile-description\" minLength=\"2\" maxLength=\"40\" aria-label=\"Род деятельности\" required/>\n          <span className=\"form__error\" id=\"profile-description-error\"></span>\n        </div>\n      </>\n    }/>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/currentUserContext'\n\nconst EditAvatarPopup = React.memo((props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const avatarRef = React.useRef(currentUser.avatar);\n\n  function handleAvatarChange (event) {\n    avatarRef.current = event.target.value;\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onUpdateAvatar({avatar: avatarRef.current});\n  }\n\n  React.useEffect(()=> {\n    avatarRef.current = currentUser.avatar;\n  }, [currentUser])\n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" buttonText=\"Сохранить\" name=\"avatar\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleAvatarChange} type=\"url\" name=\"avatar\" className=\"form__input form__input_value_avatar\" id=\"user-avatar\"  defaultValue={avatarRef.current} placeholder=\"Ссылка на аватар\" aria-label=\"Ссылка на аватар\" required/>\n          <span className=\"form__error\" id=\"user-avatar-error\"></span>\n        </div>\n      </>\n    }/>\n  )\n})\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nconst AddPlacePopup = React.memo((props) => {\n  const [formValues, changeFormValues] = React.useState({\n    name: '',\n    link: ''\n  });\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    props.onAddPlace(formValues);\n    //Сбрасываем значения после сабмита\n    changeFormValues({name: '', link: ''});\n  }\n\n  //Для валидации нам нужно для каждого инпута вызвать валидацию и отрендерить ошибку в контейнер ошибки возле этого инпута\n  function handleFormChange (event)  {\n    changeFormValues({...formValues, [event.target.name]: event.target.value});\n    console.log(formValues);\n  }\n\n  return (\n    <PopupWithForm title=\"Новое место\" buttonText=\"Создать\" name=\"place\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}  children={\n      <>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} value={formValues.name} type=\"text\" name=\"name\" className=\"form__input\" id=\"place-name\" minLength=\"1\" maxLength=\"30\" placeholder=\"Название\" aria-label=\"Название места\" required/>\n          <span className={`form__error ${'form__error_active'}`} id=\"place-name-error\">{'Название места должно быть длиннее 1 и короче 30 символов'}</span>\n        </div>\n        <div className=\"form__input-container\">\n          <input onChange={handleFormChange} value={formValues.link} type=\"url\" name=\"link\" className=\"form__input\" id=\"place-image\"  placeholder=\"Ссылка на картинку\" aria-label=\"Ссылка на картинку\" required/>\n          <span className=\"form__error\" id=\"place-image-error\"></span>\n        </div>\n      </>\n    }/>\n  )\n});\n\nexport default AddPlacePopup;\n","import {token, cohort} from './utils.js';\n\nclass Api {\n  //Конструктор принимает токен\n  constructor(token, cohort) {\n    this._token = token; //Токен\n    this._cohort = cohort; //Когорта\n  }\n\n  //Почему бы не вынести обработчик ответа сервера в приватный метод апи?\n  _processResponse (serverResponse) {\n    // console.log(serverResponse); Для нужд дебагинга\n\n    if (serverResponse.ok) {\n      return serverResponse.json(); //Если сервер ответил без ошибок, вернули данные в JSON\n    }\n\n    return Promise.reject(`Ошибка: ${serverResponse.status}`); //Иначе вернули ошибку, которая попадёт в catch\n  }\n\n  getUserInfo () {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  saveUserInfo (userObject) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me`, {\n          method: 'PATCH',\n          headers: {\n            authorization: this._token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userObject)\n        }).then(this._processResponse);\n  }\n\n  getCardsList () {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  addCard (cardObject) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cardObject)\n    }).then(this._processResponse);\n  }\n\n  deleteCard (cardId) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  changeCardLike (cardId, needLike) {\n    let requestMethod = '';\n\n    if (needLike) {\n      requestMethod = 'PUT'; //Если вторым параметром пришло true, ставим лайк\n    } else {\n      requestMethod = 'DELETE'; //Если вторым параметром пришло false, снимаем лайк\n    }\n\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n      method: requestMethod,\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._processResponse);\n  }\n\n  // FIXME: DEPRECATED\n  // addLikeToCard (cardId) {\n  //   return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       authorization: this._token,\n  //       'Content-Type': 'application/json'\n  //     }\n  //   }).then(this._processResponse);\n  // }\n  //\n  // removeLikeFromCard (cardId) {\n  //   return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/cards/likes/${cardId}`, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       authorization: this._token,\n  //       'Content-Type': 'application/json'\n  //     }\n  //   }).then(this._processResponse);\n  // }\n\n  changeAvatar (avatarData) {\n    return fetch(`https://mesto.nomoreparties.co/v1/${this._cohort}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(avatarData)\n    }).then(this._processResponse);\n  }\n}\n\nconst api = new Api(token, cohort);\nexport default api;\n\n//Коментарий для проверки разрешения конфликта с гитхабом\n","export const token = '22048b95-8eb6-4af2-b310-632c9550d5c5' //Токен\nexport const cohort = 'cohort-14'//  Идентификатор группы\n","import React from 'react';\nimport Header from './Header'\nimport Footer from './Footer';\nimport Main from './Main'\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/api.js'; //Подключение к апи\nimport { CurrentUserContext } from '../contexts/currentUserContext'; //Контекст текущего юзера\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      confirmDeletePopupOpen: false,\n      selectedCard: '',\n      currentUser: '',\n      cards: []\n    }\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({isEditAvatarPopupOpen: true});\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({isEditProfilePopupOpen: true});\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({isAddPlacePopupOpen: true});\n  }\n\n  handleCardClick = (card) => {\n    this.setState({selectedCard: card});\n  }\n\n  closeAllPopups = () => {\n    this.setState( {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      confirmDeletePopupOpen: false,\n      selectedCard: ''\n    });\n  }\n\n  handleUpdateUser = (newUserData) => {\n    api.saveUserInfo(newUserData).then(responceData => {\n      this.setState({currentUser: responceData});\n      this.closeAllPopups();\n    }).catch(error => console.log(error))\n  }\n\n  handleUpdateAvatar = (newAvatarData) => {\n    //Обновить аватар\n    api.changeAvatar(newAvatarData).then(responceData => {\n      //Обновить контекст\n      this.setState({currentUser: responceData});\n      this.closeAllPopups();\n    }).catch(error => console.log(error))\n  }\n\n  handleCardLike = (card) => {\n    //Проверяем, лайкнута ли карточка\n    const isLiked = card.likes.some(like => like._id === this.context._id);\n\n    // Давать готовые куски кода в проектной работе - такое себе, напишу эту часть сам\n    // Если карта \"лайкнута\", передаем в апи \"не нужен лайк\" чтобы снять лайк при клике\n    // Метод вернёт карточку места с обновленным числом лайков (объект, элемент массива)\n    api.changeCardLike(card._id, !isLiked).then(updatedCard => {\n      //Обновить число лайков на карточках (внести изменение в стейт списка карточек)\n      const newCardsState = this.state.cards.map(item => {\n        //Находим в массиве карточку с нужным   ._id\n        if (item._id === updatedCard._id) {\n          return updatedCard; //Возвращаем вместо неё новую карточку, полученную в ответе апи\n        } else {\n          return item;\n        }\n      })\n\n      this.setState({cards: newCardsState}); //Обновили состояние карточек\n    }).then().catch(error => console.log(error));\n  }\n\n  handleCardDelete = (card) => {\n    //Нам надо удалять карточку только после подтверждения\n    //0) Создать переменную с карточкой, которую мы будем удалять\n    this.cardToDelete  = card;\n    //1) Открыть попап подтверждения удаления передав в него пропсом\n    this.setState({confirmDeletePopupOpen: true});\n    //2) Если юзер подтвердил удаление, удалить карточку\n    //2) Если юзер не подтвердил удаление, ничего не делать\n  }\n\n  cardDelete = (event) => {\n    event.preventDefault();\n    //Передаём переменную в компоненте при помощи переменной класса\n    let card = this.cardToDelete;\n    api.deleteCard(card._id).then(responce => {\n        //После удаления в апи надо удалить карточку из списка карточек\n        const reducedCards = this.state.cards.filter(item => item._id !== card._id);//В массиве оставляем только карточки, у которых id не совпадают с удаляемой карточкой\n        this.setState({cards: reducedCards});\n        this.cardToDelete.current = {};\n      }).catch(error => {\n      console.log(error);\n    })\n    //Закрыть все попапы\n    this.closeAllPopups();\n  }\n\n  handleAddPlaceSubmit = (newCardObject) => {\n    api.addCard(newCardObject).then(responceData => {\n      this.setState({cards: [responceData, ...this.state.cards] });\n      this.closeAllPopups();\n    }).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    api.getUserInfo().then(data => {\n      this.setState({\n        currentUser: data\n      });\n    }).catch(error => console.log(error));\n\n    api.getCardsList().then(data => {\n      this.setState({\n        cards: data\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <CurrentUserContext.Provider value={this.state.currentUser}>\n        <Header/>\n        <Main onEditProfile={this.handleEditProfileClick} onAddPlace={this.handleAddPlaceClick} onEditAvatar={this.handleEditAvatarClick} onCardClick={this.handleCardClick} cards={this.state.cards} onCardLike={this.handleCardLike} onCardDelete={this.handleCardDelete}/>\n        <Footer/>\n\n        <EditProfilePopup isOpen={this.state.isEditProfilePopupOpen} onClose={this.closeAllPopups} onUpdateUser={this.handleUpdateUser} />\n        <AddPlacePopup isOpen={this.state.isAddPlacePopupOpen} onClose={this.closeAllPopups} onAddPlace={this.handleAddPlaceSubmit} />\n        <PopupWithForm title=\"Вы уверены?\" buttonText=\"Да\" name=\"confirm\" isOpen={this.state.confirmDeletePopupOpen} onSubmit={this.cardDelete} />\n        <EditAvatarPopup onClose={this.closeAllPopups} isOpen={this.state.isEditAvatarPopupOpen} onUpdateAvatar={this.handleUpdateAvatar} />\n        <ImagePopup onClose={this.closeAllPopups} card={this.state.selectedCard}/>\n      </CurrentUserContext.Provider>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('.root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}